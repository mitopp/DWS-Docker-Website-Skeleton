# Diese Compose Datei dient nur der Definierung der einzelnen Services, Netzwerken und Volumens.
# Die Standard Konfiguration wird durch Compose Dateien wie `docker-compose.override.yml`, `docker-compose.preview.yml`
# und `docker-compose.prod.yml` erweitert und geändert.

version: "3.9"

services:

  # Webserver als Alias für verschiedene images wie Apache, Nginx oder Ähnliche.
  # Dabei ist der Hostname `web` immer fest und kann in der erweiterten Konfiguration genutzt werden.
  # Die Benennung des Containers erfolgt mit entsprechendem Prefix.
  web:
    build:
      args:
        - NGINX_VERSION=${VERSION_NGINX:-1.23.1}
      context: .
      dockerfile: ./docker/web/nginx/Dockerfile
      target: prod
    container_name: ${CONTAINER_PREFIX:-dws}-nginx
    depends_on:
      php:
        condition: service_healthy
    environment:
      - DOCUMENT_ROOT=${COMPOSE_DOCUMENT_ROOT:-/srv/app}
      - PUBLIC_ROOT=${COMPOSE_PUBLIC_ROOT:-/}
    image: ${CONTAINER_PREFIX:-dws}-nginx:latest
    networks:
      - default
    ports:
      - target: 80
        published: ${PORT_HTTP:-80}
        protocol: tcp
      - target: 443
        published: ${PORT_HTTPS:-443}
        protocol: tcp
    # The policy restarts a container irrespective of the exit code but will stop restarting when the service is stopped or removed.
    restart: unless-stopped
    volumes:
      - type: volume
        source: php_socket
        target: /var/run/php
      - type: bind
        source: ./app
        target: ${COMPOSE_DOCUMENT_ROOT:-/srv/app}
        read_only: true
    working_dir: /etc/nginx

  php:
    build:
      args:
        - PHP_VERSION=${VERSION_PHP:-8.1.11}
      context: .
      dockerfile: ./docker/php/fpm/Dockerfile
      target: prod
    container_name: ${CONTAINER_PREFIX:-dws}-php
    image: ${CONTAINER_PREFIX:-dws}-php:latest
    networks:
      - default
    # The policy restarts a container irrespective of the exit code but will stop restarting when the service is stopped or removed.
    restart: unless-stopped
    volumes:
      - type: volume
        source: php_socket
        target: /var/run/php
    working_dir: ${COMPOSE_DOCUMENT_ROOT:-/srv/app}

networks:

  # Das Standard Netzwerk kann durch ENV-Variablen konfiguriert werden.
  # Auch eine Erweiterung für IP_V6 ist möglich.
  default:
    ipam:
      config:
        - subnet: ${NETWORK_IP_V4_SUBNET:-10.0.0.0/24}
          gateway: ${NETWORK_IP_V6_SUBNET:-10.0.0.1}

volumes:

  # Dieses Volume dient der Verbindung vpn Webserver und PHP-FPM via socket.
  php_socket:
